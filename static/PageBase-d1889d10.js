var t=Object.defineProperty,e=(e,s,o)=>(((e,s,o)=>{s in e?t(e,s,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[s]=o})(e,"symbol"!=typeof s?s+"":s,o),o);import{V as s}from"./index-4a918107.js";let o={};const n=["self","emits","expose","slots","methods","props","computed"],i=["constructor","setup","render","created","mounted"];class r{constructor(){e(this,"emits",[]),e(this,"expose",[]),e(this,"methods",{}),e(this,"computed",{}),e(this,"components",{}),e(this,"props",{});const t=Object.getPrototypeOf(this),s=Reflect.ownKeys(t);for(let e=0;e<s.length;e++){const o=s[e];if(i.includes(o))continue;const n=Object.getOwnPropertyDescriptor(t,o);n.get?this.computed[o]=n.get:this.methods[o]=this[o]}}get data(){o={};for(const t in this){if(n.includes(t))continue;const e=this[t];o[t]=e}return()=>o}setup(){const t=s();(null==t?void 0:t.refs)&&setTimeout((()=>{for(const e in t.refs)t.data[e]=t.refs[e]}),0)}}export{r as P};
